@TechReport{UCAM-CL-TR-972,
  author =	 {Guo, Xuan and Bates, Daniel and Mullins, Robert and
          	  Bradbury, Alex},
  title = 	 {{Muntjac multicore RV64 processor: introduction and
         	   microarchitectural guide}},
  year = 	 2022,
  month = 	 jun,
  url = 	 {https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-972.pdf},
  institution =  {University of Cambridge, Computer Laboratory},
  doi = 	 {10.48456/tr-972},
  number = 	 {UCAM-CL-TR-972}
}
@article{chipyard,
  author={Amid, Alon and Biancolin, David and Gonzalez, Abraham and Grubb, Daniel and Karandikar, Sagar and Liew, Harrison and Magyar,   Albert and Mao, Howard and Ou, Albert and Pemberton, Nathan and Rigge, Paul and Schmidt, Colin and Wright, John and Zhao, Jerry and Shao, Yakun Sophia and Asanovic, Krste and Nikolic, Borivoje},
  journal={IEEE Micro},
  title={Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs},
  year={2020},
  volume={40},
  number={4},
  pages={10-21},
  doi={10.1109/MM.2020.2996616},
  ISSN={1937-4143},
}
@article{blackparrot,
  author          = {D. Petrisko, F. Gilani, M. Wyse, D. C. Jung, S. Davidson, P. Gao, C. Zhao, Z. Azad, S. Canakci, B. Veluri, T. Guarino, A. J. Joshi, M. Oskin, M. B. Taylor},
  journal         = {IEEE Micro},
  title           = {BlackParrot: An Agile Open Source RISC-V Multicore for Accelerator SoCs},
  year            = {2020},
  doi             = {10.1109/MM.2020.2996145}
}
@misc{valenterisc,
  title={A RISC-V Heterogeneous SoC for Embedded Devices},
  author={Valente, Luca and Sinigaglia, Mattia and Tortorella, Yvan and Rossi, Davide and Benini, Luca},
  howpublished = {\url{https://open-src-soc.org/2022-05/media/posters/4th-RISC-V-Meeting-2022-05-03-Luca-Valente-poster-abstract.pdf}}
}
@techreport{rocketchip,
    Author = {Asanović, Krste and Avizienis, Rimas and Bachrach, Jonathan and Beamer, Scott and Biancolin, David and Celio, Christopher and Cook, Henry and Dabbelt, Daniel and Hauser, John and Izraelevitz, Adam and Karandikar, Sagar and Keller, Ben and Kim, Donggyu and Koenig, John and Lee, Yunsup and Love, Eric and Maas, Martin and Magyar, Albert and Mao, Howard and Moreto, Miquel and Ou, Albert and Patterson, David A. and Richards, Brian and Schmidt, Colin and Twigg, Stephen and Vo, Huy and Waterman, Andrew},
    Title = {The Rocket Chip Generator},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2016},
    Month = {Apr},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
    Number = {UCB/EECS-2016-17},
    Abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.}
}
@techreport{boom-core,
    Author = {Celio, Christopher and Patterson, David A. and Asanović, Krste},
    Title = {The Berkeley Out-of-Order Machine (BOOM): An Industry-Competitive, Synthesizable, Parameterized RISC-V Processor},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2015},
    Month = {Jun},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2015/EECS-2015-167.html},
    Number = {UCB/EECS-2015-167},
    Abstract = {BOOM is a synthesizable, parameterized, superscalar out-of-order RISC-V core designed to serve as the prototypical baseline processor for future micro-architectural studies of out-of-order processors. Our goal is to provide a readable, open-source implementation for use in education, research, and industry.

BOOM is written in roughly 9,000 lines of the hardware construction language Chisel. We leveraged Berkeley’s open-source Rocket-chip SoC generator, allowing us to quickly bring up an entire multi-core processor system (including caches and uncore) by replacing the in-order Rocket core with an out-of-order BOOM core. BOOM supports atomics, IEEE 754-2008 floating-point, and page-based virtual memory. We have demonstrated BOOM running Linux, SPEC CINT2006, and CoreMark.}
}
@misc{biglittle,
  author       = {ARM Ltd.},
  howpublished = {\url{https://web.archive.org/web/20121022055646/http://www.arm.com/products/processors/technologies/bigLITTLEprocessing.php}},
  title        = {big.LITTLE Processing},
  year         = {2011}
}
@manual{riscvISA,
  author       = {RISC-V Foundation},
  editors      = {Andrew Waterman and Krste Asanovic},
  title        = {The RISC-V Instruction Set Manual, Volume I: User-Level ISA, Document Version 2.2},
  year         = {2017}
}
@misc{debianriscv,
  author       = {Manuel A. Fernandez Montecelo, Karsten Merker},
  howpublished = {\url{https://wiki.debian.org/RISC-V}},
  title        = {RISC-V - Debian},
  year         = {2021}
}
@article{zaruba2019cost,
   author={F. {Zaruba} and L. {Benini}},
   journal={IEEE Transactions on Very Large Scale Integration (VLSI) Systems},
   title={The Cost of Application-Class Processing: Energy and Performance Analysis of a Linux-Ready 1.7-GHz 64-Bit RISC-V Core in 22-nm FDSOI Technology},
   year={2019},
   volume={27},
   number={11},
   pages={2629-2640},
   doi={10.1109/TVLSI.2019.2926114},
   ISSN={1557-9999},
   month={Nov},
}
@misc{applem2,
  author       = {Apple},
  howpublished = {\url{https://www.apple.com/uk/newsroom/2022/06/apple-unveils-m2-with-breakthrough-performance-and-capabilities/}},
  title        = {Apple unveils M2},
  year         = {2022}
}
@misc{riscv-1,
  author       = {Editors Andrew Waterman and Krste Asanovic, RISC-V Foundation, December 2019},
  title        = {The RISC-V Instruction Set Manual, Volume I: User-Level ISA, Document Version 20191213},
  howpublished = {\url{https://github.com/riscv/riscv-isa-manual/releases/download/Ratified-IMAFDQC/riscv-spec-20191213.pdf}}
}
@misc{riscv-2,
  author       = {Editors Andrew Waterman, Krste Asanovic, and John Hauser, RISC-V International, December 2021},
  title        = {The RISC-V Instruction Set Manual, Volume II: Privileged Architecture, Document Version 20211203},
  howpublished = {\url{https://github.com/riscv/riscv-isa-manual/releases/download/Priv-v1.12/riscv-privileged-20211203.pdf}}
}
@misc{tilelink,
  author       = {SiFive},
  title        = {SiFive TileLink Specification},
  howpublished = {\url{https://sifive.cdn.prismic.io/sifive/7bef6f5c-ed3a-4712-866a-1a2e0c6b7b13_tilelink_spec_1.8.1.pdf}}
}
@msic{nexys-a7-100t,
  author       = {Digilent},
  title        = {Nexys A7 Reference Manual},
  howpublished = {\url{https://digilent.com/reference/programmable-logic/nexys-a7/reference-manual}}
}
@book{case-method-fasttrack,
  author         = {Dai Clegg, Richard Barker},
  publisher      = {Addison-Wesley},
  title          = {Case Method Fast-Track: A RAD Approach},
  year           = {1994},
  isbn           = {978-0-201-62432-8}
}
@misc{vivado-risc-v,
  author       = {Eugene Tarassov},
  howpublished = {\url{https://github.com/eugene-tarassov/vivado-risc-v}},
  title        = {Xilinx Vivado block designs for FPGA RISC-V SoC running Debian Linux distro},
  year         = {2020}
}
@misc{irc,
  author       = {J. Oikarienen, D. Reed},
  howpublished = {\url{https://datatracker.ietf.org/doc/html/rfc1459#section-4.1}},
  title        = {Internet Relay Chat Protocol},
  year         = {1993}
}
@misc{minicom,
  author       = {Miquel van Smoorenburg},
  howpublished = {\url{https://salsa.debian.org/minicom-team/minicom}},
  title        = {Minicom},
  year         = {<1999}
}
@misc{linux-memory,
  author       = {The kernel development community},
  howpublished = {\url{https://www.kernel.org/doc/html/latest/admin-guide/mm/concepts.html}},
  title        = {Concepts overview - Memory Management}
}
@misc{rust-riscv,
  author       = {Aleš Katona, Vadim Kaushan, Daniel Hayes},
  title        = {riscv - Rust},
  howpublished = {\url{https://docs.rs/riscv/0.10.0/riscv/}}
}
@article{gantt-chart,
  author          = {Henry L. Gantt},
  journal         = {Engineering Magazine},
  title           = {Work, Wages and Profit},
  year            = {1910}
}
@article{squareroot-fpu,
  author          = {K Hema Priya},
  journal         = {IOP Conference Series: Materials Science and Engineering},
  title           = {Design And Optimization Of Floating Point Division And Square Root Using Minimal Device Latency},
  year            = {2021}
}